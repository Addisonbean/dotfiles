#!/usr/bin/env bash

function xval() {
	xrdb -query | grep "$1" | head -1 | cut -f 2
}

# TODO:
# - Sticky floating windows *
#   - Or at least a way to bring all floating windows to the top
# - Highlight windows instead of frames (that could fix the ranger issue)
# - Make ranger open in a new floated frame, and don't float the window (client) itself
# - Make empty tags/frames less ugly
#   - Basically, if a frame is empty it's ugly. Fix that... Make it subtle or something...
# - Auto open new terminals in a new frame (at least when using super+shift+enter)
# - No border when one window is visible (is this already working???)

# key reference: https://www.cl.cam.ac.uk/~mgk25/ucs/keysymdef.h

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# Keybindings {{{

# Remove all existing keybindings
hc keyunbind --all

# Mod key = Super key
Mod=Mod4

# Herbstluftwm mappings {{{

# hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-w close
# hc keybind $Mod-Shift-w spawn herbstclient foreach C --unique clients. sprintf WINIDATTR '%c.winid' C substitute WINID WINIDATTR xkill -id WINID
hc keybind $Mod-Shift-w spawn bash -c 'xdotool getmouselocation | awk '\''{ print $4 }'\'' | cut -d '\'':'\'' -f 2 | xargs xkill -id'
# hc keybind $Mod-Shift-w spawn xdotool getmouselocation | awk '{ print $4 }' | cut -d ':' -f 2 > ~/tmp
# hc keybind $Mod-Shift-w spawn bash -c 'xdotool getmouselocation > ~/tmp'

# Frame navigation {{{

hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# }}}
# Window repositioning {{{

# "shift" moves tiled windows to different frames
# and shoves floating windows to different sides of the desktop

hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right

# }}}

hc keybind $Mod-minus       split   bottom  1.5
hc keybind $Mod-backslash   split   right   0.5

# TODO: what's this???
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# Resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# Tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# Cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# Window states
hc keybind $Mod-r remove
hc keybind $Mod-s       chain . fullscreen off . floating on  . pseudotile off . set_attr clients.focus.floating off
hc keybind $Mod-f       chain . fullscreen on  . floating off . pseudotile off . set_attr clients.focus.floating off
hc keybind $Mod-t       chain . fullscreen off . floating off . pseudotile off . set_attr clients.focus.floating off
hc keybind $Mod-Shift-t chain . fullscreen off . floating off . pseudotile on  . set_attr clients.focus.floating off

# TODO: what's this???
# hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
# hc keybind $Mod-Shift-t pseudotile on

# hc keybind $Mod-s floating toggle
# hc keybind $Mod-f fullscreen toggle
# # TODO: what's this???
# hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
# hc keybind $Mod-Shift-t pseudotile toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 3                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace    cycle_monitor

# $Mod-Tab is handled by
# ~/.config/herbstluftwm/last-window-daemon.sh
# later in the config

# hc keybind $Mod-Tab          cycle_all +1
# hc keybind $Mod-Shift-Tab    cycle_all -1
hc keybind $Mod-bracketleft  cycle -1
hc keybind $Mod-bracketright cycle 1

# }}}
# Fn/media key mappings {{{

hc keybind XF86AudioPlay spawn bash -c '\
    [ -z "$(pidof spotify)" ] && herbstclient use_index 2 && spotify; \
    playerctl --player spotify play-pause'
hc keybind XF86AudioMicMute spawn bash -c '\
    [ -z "$(pidof spotify)" ] && herbstclient use_index 2 && spotify; \
    playerctl --player spotify play-pause'
hc keybind Alt-XF86AudioPlay spawn playerctl --player chromium play-pause
hc keybind Alt-XF86AudioMicMute spawn playerctl --player chromium play-pause
hc keybind XF86AudioPrev spawn playerctl previous
hc keybind XF86AudioNext spawn playerctl next

hc keybind XF86AudioLowerVolume spawn ~/.local/bin/volume.sh down
hc keybind XF86AudioRaiseVolume spawn ~/.local/bin/volume.sh up
hc keybind XF86AudioMute spawn ~/.local/bin/volume.sh toggle

hc keybind XF86MonBrightnessUp spawn ~/.local/bin/brightness.sh up
hc keybind XF86MonBrightnessDown spawn ~/.local/bin/brightness.sh down

hc keybind Print spawn ~/.local/bin/screenshot.sh
hc keybind Alt-Print spawn ~/.local/bin/screenshot.sh -s

# }}}
# Other mappings {{{

hc keybind $Mod-Shift-Return spawn "${TERMINAL:-xterm}"
hc keybind $Mod-p spawn rofi -show drun -show-icons -i -width 640 -theme blurry-app-launcher
hc keybind $Mod-x spawn ~/.local/bin/xtheme-picker.sh
hc keybind $Mod-e spawn st -c Ranger -e ranger
hc keybind $Mod-m spawn rofi -theme blurry -show window -show-icons -i -width 960
hc keybind $Mod-g spawn ~/.local/bin/help.sh commands

# Notes {{{

hc keybind $Mod-n spawn ~/.local/bin/notes.sh notes
hc keybind $Mod-Control-n spawn ~/.local/bin/notes.sh tags
hc keybind $Mod-Alt-n spawn ~/.local/bin/notes.sh commands

# }}}

# }}}

# }}}

hc set focus_follows_mouse on

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set frame_border_width "$(xval herb.borderSize)"
hc set frame_border_active_color "$(xval herb.focusedBorder)"
hc set frame_border_normal_color "$(xval herb.normalBorder)"

# Don't show borders for empty frames unless focused
hc set always_show_frame off

# `frame_bg_transparent` is `off` so these don't matter
# hc set frame_bg_normal_color '#FF000'
# hc set frame_bg_active_color '#FF000'

# Don't show background colors for frames
hc set frame_bg_transparent on
hc set frame_transparent_width 5
hc set frame_gap "$(xval herb.gap)"

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings on
hc set smart_frame_surroundings "$(xval herb.smartFrame)"
hc set mouse_recenter_gap 0

# hc attr theme.active.color '#BBBBBB'

hc attr theme.inner_width 0
hc attr theme.border_width 2
# TODO: what's this???
hc attr theme.color '#33415E'
hc attr theme.active.color '#BBBBBB'
# hc attr theme.color "$(xval herb.normalBorder)"
# hc attr theme.active.color "$(xval herb.focusedBorder)"

# hc attr theme.outer_color '#FF0000'

# hc attr theme.floating.border_width 2
# hc attr theme.floating.outer_width 0
# hc attr theme.floating.outer_color black
# hc attr theme.active.outer_color '#3E4A00'
# hc attr theme.background_color '#141414'

# TODO: Do I want this??? Maybe??? Maybe not???
# Prob not but maybe add a way to toggle it?
hc set hide_covered_windows off

# Window rules {{{

hc unrule -F

#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on

hc rule class='Ranger' floating=on floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# }}}

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

hc detect_monitors

# find the panel
# panel=~/.config/herbstluftwm/panel.sh
# [ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
# for monitor in $(hc list_monitors | cut -d: -f1) ; do
#     # start it on each monitor
#     "$panel" "$monitor" &
# done

Mod=$Mod ~/.config/herbstluftwm/last-window-daemon.sh & disown

" vim:foldmethod=marker:foldlevel=0
